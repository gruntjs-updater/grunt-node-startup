#!/bin/sh

NODE_EXEC={{node_exec}}

###############

# REDHAT chkconfig header

# chkconfig: - 58 74
# description: node-app is the script for starting a node app on boot.
### BEGIN INIT INFO
# Provides: node
# Required-Start:    $network $remote_fs $local_fs
# Required-Stop:     $network $remote_fs $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start and stop node
# Description: Node process for app
### END INIT INFO

###############

USAGE="Usage: $0 {start|stop|restart|status} [--force]"
FORCE_OP=false

pid_file_exists() {
    [ -f "{{pid_dir}}/{{pid_file}}" ]
}

get_pid() {
    echo "$(cat "{{pid_dir}}/{{pid_file}}")"
}

is_running() {
    PID=$(get_pid)
    ! [ -z "$(ps -e | awk '{print $1}' | grep "^$PID$")" ]
}

start_it() {
    mkdir -p "{{pid_dir}}"
    mkdir -p "{{log_dir}}"

    echo "Starting node app ..."
    [[vars]] $NODE_EXEC "{{app_dir}}/{{node_app}}"  1>"{{log_dir}}/{{log_file}}" 2>&1 &
    echo $! > "{{pid_dir}}/{{pid_file}}"
    echo "Node app started with pid $!"
}

stop_process() {
    PID=$(get_pid)
    kill $PID
}

remove_pid_file() {
    rm -f "{{pid_dir}}/{{pid_file}}"
}

start_app() {
    if pid_file_exists
    then
        if is_running
        then
            PID=$(get_pid)
            echo "Node app already running with pid $PID"
            exit 1
        else
            echo "Node app stopped, but pid file exists"
            if [ $FORCE_OP = true ]
            then
                echo "Forcing start anyways"
                echo "Removing pid file"
                remove_pid_file
                start_it
            fi
        fi
    else
        start_it
    fi
}

stop_app() {
    if pid_file_exists
    then
        if is_running
        then
            echo "Stopping node app ..."
            echo "Killing process $(get_pid)"
            stop_process
            echo "Removing pid file"
            remove_pid_file
            echo "Node app stopped"
        else
            echo "Node app already stopped, but pid file exists"
            if [ $FORCE_OP = true ]
            then
                echo "Forcing stop anyways ..."
                echo "Removing pid file"
                remove_pid_file
                echo "Node app stopped"
            else
                exit 1
            fi
        fi
    else
        echo "Node app already stopped, pid file does not exist"
        exit 1
    fi
}

status_app() {
    if pid_file_exists
    then
        if is_running
        then
            echo "Node app running with pid $(get_pid)"
        else
            echo "Node app stopped, but pid file exists"
        fi
    else
        echo "Node app stopped"
    fi
}

case "$2" in
    --force)
        FORCE_OP=true
    ;;

    "")
    ;;

    *)
        echo $USAGE
        exit 1
    ;;
esac

case "$1" in
    start)
        start_app
    ;;

    stop)
        stop_app
    ;;

    restart)
        stop_app
        start_app
    ;;

    status)
        status_app
    ;;

    *)
        echo $USAGE
        exit 1
    ;;
esac
